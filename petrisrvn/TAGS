
processor.cc,736
double Processor::__x_offset;33,838
std::vector<Processor *> processor;35,869
Processor::Processor(49,1282
void Processor::initialize(initialize57,1386
void Processor::create(create72,1681
Processor::check(check103,2871
Processor::find(find120,3281
double Processor::rate(rate133,3596
unsigned int Processor::ref_count(ref_count148,3977
bool Processor::is_single_place_processor(is_single_place_processor157,4213
Processor::set_queue_length(set_queue_length167,4407
Processor::transmorgrify(transmorgrify228,5960
Processor::make_queue(make_queue314,8315
Processor::make_fifo_queue(make_fifo_queue353,9450
Processor::insert_DOM_results(insert_DOM_results445,13057
Processor::get_waiting(get_waiting485,14418

makeobj.h,34
#define PETRISRVN_MAKEOBJ_H8,137

pragma.h,1000
#define _PRAGMA_H10,269
class Pragma16,347
    typedef void (Pragma::*fptr)fptr25,493
    scheduling_type processor_scheduling(29,620
    bool reschedule_on_async_send(30,703
    LQIO::severity_t severity_level(31,783
    bool spex_comment(32,849
    bool spex_header(33,905
    bool stop_on_message_loss(34,959
    scheduling_type task_scheduling(35,1031
    bool default_processor_scheduling(37,1105
    bool default_task_scheduling(38,1193
    scheduling_type _processor_scheduling;56,1899
    bool _reschedule_on_async_send;57,1942
    LQIO::severity_t _severity_level;58,1978
    bool _spex_comment;59,2016
    bool _spex_header;60,2040
    bool _stop_on_message_loss;61,2063
    scheduling_type _task_scheduling;62,2095
    bool _default_processor_scheduling;63,2133
    bool _default_task_scheduling;64,2173
    static Pragma * __pragmas;67,2217
    static const std::map<std::map70,2258
    static const std::map<const std::string,Pragma::fptr> __set_pragma;70,2258

place.h,578
#define _PLACE_H11,404
namespace LQIO 24,596
    namespace DOM 25,613
class Place 30,657
    Place(32,679
    virtual ~Place(33,757
    unsigned id;35,782
    LQIO::DOM::Entity * get_dom(38,839
    Place& set_origin(47,1126
    double get_x_pos(48,1228
    double get_y_pos(49,1276
    static const double	SERVER_Y_OFFSET;52,1333
    static const double CLIENT_Y_OFFSET;53,1374
    static const double PLACE_X_OFFSET;54,1415
    static const double PLACE_Y_OFFSET;55,1455
    LQIO::DOM::Entity* _dom;58,1505
    double _x_pos;59,1565
    double _y_pos;60,1584

pragma.cc,797
Pragma * Pragma::__pragmas 23,555
const std::map<const std::string,Pragma::fptr> Pragma::__set_pragma 24,593
Pragma::Pragma(36,1388
Pragma::set(set50,1730
Pragma::set_force_random_queueing(set_force_random_queueing73,2440
Pragma::set_processor_scheduling(set_processor_scheduling85,2758
Pragma::set_queue_size(set_queue_size93,2934
Pragma::set_reschedule_on_async_send(set_reschedule_on_async_send103,3229
Pragma::set_severity_level(set_severity_level109,3372
Pragma::set_spex_comment(set_spex_comment115,3503
Pragma::set_spex_header(set_spex_header121,3622
Pragma::set_stop_on_message_loss(set_stop_on_message_loss127,3739
Pragma::set_task_scheduling(set_task_scheduling133,3874
Pragma::usage(usage144,4075
Pragma::str_to_scheduling_type(str_to_scheduling_type174,4921

errmsg.h,399
    FTL_TAG_TABLE_FULL=21,385
    ERR_DELAY_MULTIPLY_DEFINED,22,430
    ERR_REPLICATION,23,462
    ERR_SEND_NO_REPLIES_PROHIBITED,24,483
    ERR_BOGUS_REFERENCE_TASK,25,519
    ERR_MULTI_SYNC_SERVER,26,549
    WRN_CONVERGENCE,27,576
    WRN_PREEMPTIVE_SCHEDULING,28,597
    ADV_MESSAGES_LOST,29,628
    ADV_OPEN_ARRIVALS_DONT_MATCH,30,651
    ADV_ERLANG_N,31,685
    LSTLCLERRMSG=32,703

phase.h,1686
#define PETRISRVN_PHASE_H11,412
namespace LQIO 29,675
    namespace DOM 30,692
struct slice_info_t 36,748
    double WX_xpos[WX_xpos38,790
    double WX_ypos[WX_ypos39,820
    struct place_object * WX[WX40,850
    struct place_object * SX[SX41,912
    struct place_object * ChX[ChX42,980
    struct place_object * PrX[PrX43,1048
    struct place_object * PgX[PgX44,1115
struct Call 47,1184
    Call(48,1198
    LQIO::DOM::Call * _dom;54,1376
    short _rpar_y;55,1432
    double _w;56,1488
    double _dp;57,1541
    std::vector<double> _bin;58,1596
class Phase 61,1661
    typedef double (Phase::*util_fnptr)util_fnptr63,1683
    virtual ~Phase(68,1866
    const Entry * entry(71,1949
    const Task * task(73,2035
    LQIO::DOM::Phase * get_dom(75,2124
    bool has_calls(86,2595
    virtual bool is_activity(90,2772
    unsigned int n_slices(94,2881
    double mean_processor_calls(95,2969
    LQIO::DOM::Phase * _dom;136,4713
    const Entry * _entry;137,4742
    const Task * _task;138,4793
    std::map<std::map141,4859
    std::map<const Entry *,Call> _call;141,4859
    short _rpar_s[_rpar_s142,4899
    double _prob_a;143,4960
    unsigned _n_slices;144,5009
    double _mean_processor_calls;145,5061
    slice_info_t _slice[_slice148,5139
    double done_xpos[done_xpos149,5191
    double done_ypos[done_ypos150,5244
    struct place_object * XX[XX152,5298
    struct place_object * ZX[ZX153,5374
    struct trans_object * doneX[doneX154,5435
    double task_tokens[task_tokens155,5500
    double proc_tokens[proc_tokens156,5563
    static double __parameter_x;159,5635
    static double __parameter_y;160,5698

runlqx.h,555
#define _RUNLQX_H10,258
namespace SolverInterface 19,393
    class Solve 21,423
	typedef bool (Model::*solve_using)solve_using23,475
	Solve(26,577
	virtual ~Solve(28,711
	virtual std::string getName(31,797
	virtual const char* getParameterInfo(32,855
	virtual std::string getHelp(33,918
	static bool solveCallViaLQX;36,1090
	static bool implicitSolve;37,1120
	static std::string customSuffix;38,1148
	Model * _aModel;41,1197
	solve_using _solve;42,1215
	LQIO::DOM::Document* _document;43,1236
	static unsigned int invocationCount;45,1270

task.cc,1629
#define SUM_BRANCHES 42,1034
#define FOLLOW_BRANCH 43,1061
#define FOLLOW_RNVS 44,1089
#define IGNORE_RNVS 45,1116
std::vector<Task *> task;47,1145
double Task::__server_x_offset;48,1171
double Task::__client_x_offset;49,1243
double Task::__server_y_offset;50,1315
double Task::__queue_y_offset;51,1347
Task::Task(57,1416
void Task::initialize(initialize90,2272
Task::remove_netobj(remove_netobj119,3026
Task::create(create145,3691
Task::check(check248,7049
int Task::priority(priority351,10331
double Task::think_time(think_time363,10648
bool Task::is_server(is_server377,11025
bool Task::is_client(is_client386,11190
bool Task::is_single_place_task(is_single_place_task396,11357
unsigned int Task::ref_count(ref_count402,11523
unsigned Task::n_customers(n_customers418,11838
Task::add_activity(add_activity432,12114
Task::find_activity(find_activity452,12521
void Task::set_start_activity(set_start_activity464,12776
unsigned int Task::set_queue_length(set_queue_length480,13242
Task::build_forwarding_lists(build_forwarding_lists570,15703
Task::make_queue_places(make_queue_places592,16205
Task::transmorgrify(transmorgrify618,16834
Task::create_instance(create_instance678,18239
Task::make_layer_mask(make_layer_mask781,21830
Task::get_results(get_results796,22275
Task::get_results(get_results810,22555
Task::get_throughput(get_throughput899,25074
Task::get_total_throughput(get_total_throughput936,26149
Task::insert_DOM_results(insert_DOM_results965,26776
OpenTask::get_results(get_results1024,28365
OpenTask::insert_DOM_results(insert_DOM_results1040,28777

petrisrvn.cc,715
static bool copyright_flag	61,1380
bool debug_flag 63,1446
bool keep_flag 64,1521
bool no_execute_flag 65,1596
bool reload_net_flag 66,1671
bool rtf_flag 67,1746
bool trace_flag	68,1821
bool uncondition_flag 69,1882
bool verbose_flag 70,1957
bool customers_flag 72,2033
bool distinguish_join_customers 73,2096
bool simplify_network	74,2171
double	x_scaling	76,2238
unsigned open_model_tokens	77,2295
static const char * net_dir_name	79,2363
static const char * opts 86,2465
static const struct option longopts[longopts89,2541
static const char * opthelp[opthelp125,4335
std::regex * inservice_match_pattern	160,6672
FILE * stddbg;162,6721
main 167,6808
usage 445,14174
my_handler 501,15343

results.h,216
#define PETRISRVN_RESULTS_H19,570
struct solution_stats_t 24,649
    solution_stats_t(26,676
    int tangible;27,745
    int vanishing;28,796
    double precision;29,850
inline std::ostream& operator<<(34,959

activity.cc,1432
std::map<LQIO::DOM::ActivityList*, LQIO::DOM::ActivityList*> Activity::actConnections;31,819
std::map<LQIO::DOM::ActivityList*, ActivityList *> Activity::domToNative;32,906
Activity::Activity(34,982
double Activity::check(check48,1307
Activity::transmorgrify(transmorgrify59,1425
Activity::find_children(find_children115,3446
void Activity::activity_cycle_error(activity_cycle_error144,4180
Activity::count_replies(count_replies161,4606
Activity::add_reply_list(add_reply_list205,5826
Activity& Activity::add_activity_lists(add_activity_lists234,6730
Activity::replies_to(replies_to330,10178
Activity::link_activity(link_activity343,10399
Activity::insert_DOM_results(insert_DOM_results642,22167
Activity::follow_activity_for_tokens(follow_activity_for_tokens658,22549
double Activity::residence_time(residence_time678,23088
Activity::act_join_item(act_join_item690,23321
Activity::act_and_join_list act_and_join_list712,23817
Activity::act_or_join_list act_or_join_list740,24663
Activity::act_fork_item(act_fork_item757,25103
Activity::act_and_fork_list act_and_fork_list780,25680
Activity::act_or_fork_list act_or_fork_list803,26303
Activity::act_loop_list act_loop_list827,27050
Activity::realloc_list realloc_list856,27965
/* static */ void Activity::complete_activity_connections complete_activity_connections874,28488
/* static */ void Activity::act_connect act_connect892,29066

task.h,2885
#define _TASK_H11,403
#define SERVER_BIT	26,623
#define REF_TASK_BIT	27,654
#define OPEN_SRC_BIT	28,689
#define SEMAPHORE_BIT	29,724
#define X_OFFSET(31,762
#define	Y_OFFSET(32,843
namespace LQIO 40,967
    namespace DOM 41,984
class Task 50,1087
    enum class Type 52,1123
    enum class Type { SERVER,52,1123
    enum class Type { SERVER, REF_TASK,52,1123
    enum class Type { SERVER, REF_TASK, OPEN_SRC,52,1123
    enum class Type { SERVER, REF_TASK, OPEN_SRC, SEMAPHORE 52,1123
    Type type(66,1407
    unsigned int n_phases(70,1587
    Task& set_n_phases(71,1643
    unsigned int n_entries(73,1776
    unsigned int n_activities(74,1838
    unsigned int n_act_lists(75,1906
    unsigned int n_threads(76,1972
    unsigned int n_open_tokens(77,2030
    unsigned int max_queue_length(78,2094
    unsigned max_k(80,2202
    Task& set_max_k(81,2248
    Task& set_proc_queue_count(82,2316
    unsigned int get_proc_queue_count(83,2406
    virtual bool is_infinite(87,2559
    virtual bool is_sync_server(89,2696
    virtual bool inservice_flag(90,2761
    virtual bool has_main_thread(91,2829
    Processor * processor(93,2900
    double utilization(94,2957
    std::vector<Entry *> entries;125,4127
    std::vector<Activity *> activities;126,4183
    std::vector<ActivityList *> act_lists;127,4246
    struct place_object * TX[TX128,4314
    struct place_object * SyX[SyX130,4396
    struct place_object * GdX[GdX132,4468
    struct trans_object * gdX[gdX133,4529
    struct place_object * LX[LX134,4599
    struct place_object * ZZ;136,4697
    Processor * _processor;140,4772
    const Type _type;141,4823
    bool _sync_server;142,4868
    bool _has_main_thread;143,4924
    bool _inservice_flag;144,4982
    bool _needs_flush;145,5039
    bool _queue_made;146,5097
    unsigned _n_phases;147,5157
    unsigned _n_threads;148,5181
    unsigned _max_queue_length;149,5206
    unsigned _max_k;150,5238
    unsigned _open_tokens;152,5314
    unsigned _proc_queue_count;154,5371
    unsigned _requestor_no;155,5439
    double task_tokens[task_tokens158,5476
    double lock_tokens[lock_tokens159,5528
    double _utilization[_utilization162,5589
    static double __server_x_offset;165,5665
    static double __client_x_offset;166,5742
    static double __server_y_offset;167,5819
    static double __queue_y_offset;168,5856
class OpenTask 171,5896
    OpenTask(173,5935
    const char * name(175,6106
    virtual unsigned int multiplicity(177,6163
    virtual double think_time(178,6223
    virtual bool is_client(180,6278
    virtual bool is_server(181,6330
    virtual bool is_sync_server(182,6384
    virtual bool inservice_flag(183,6442
    virtual bool has_main_thread(184,6500
    LQIO::DOM::Document * _document;190,6663
    const std::string _name;191,6700
    const Entry * _dst;192,6729

activity.h,923
#define _ACTIVITY_H11,409
namespace LQIO 27,627
    namespace DOM 28,644
class Activity 33,694
    virtual ~Activity(38,844
    bool is_specified(40,872
    virtual bool is_activity(41,928
    unsigned int n_replies(42,982
    ActivityList * input(54,1590
    ActivityList *_input;_input84,3297
    ActivityList *_output;_output85,3353
    std::set<Entry *> _replies;86,3408
    bool _is_start_activity;87,3463
    bool _is_reachable;88,3522
    bool _is_specified;89,3579
    double _throughput[_throughput90,3635
    static std::map<std::map93,3696
    static std::map<LQIO::DOM::ActivityList*, LQIO::DOM::ActivityList*> actConnections;93,3696
    static std::map<std::map94,3784
    static std::map<LQIO::DOM::ActivityList*, ActivityList *> domToNative;94,3784
struct eqActivityStr 97,3863
    eqActivityStr(99,3887
    bool operator()(operator()100,3940
    const std::string& _s;103,4027

actlist.h,1370
#define _ACTLIST_H13,462
class ActivityList 35,746
    enum class Type 39,803
	FORK,40,825
	OR_FORK,41,832
	AND_FORK,42,842
	LOOP,43,853
	JOIN,44,860
	AND_JOIN,45,867
	OR_JOIN46,878
    enum class JoinType49,895
	UNDEFINED,51,925
	INTERNAL_FORK_JOIN,52,937
	SYNCHRONIZATION53,958
    virtual ~ActivityList(62,1155
    Type type(64,1187
    unsigned int n_acts(65,1227
    const Type _type;100,3060
    LQIO::DOM::ActivityList * _dom;101,3082
	    ActivityList * prev;104,3140
	    ActivityList * join;105,3193
	    double prob[prob106,3250
	    bool reachable[reachable107,3311
	} fork;108,3378
	    ActivityList * next;110,3397
	    ActivityList * fork[fork111,3450
	    Activity * source[source112,3517
	    struct place_object * FjM[FjM113,3581
	    double tokens[tokens114,3646
	    JoinType type;115,3703
	    int quorumCount;117,3765
	} join;119,3813
	    ActivityList * prev;121,3832
	    double count[count122,3885
	    Activity * endlist;123,3916
	    struct place_object * LoopP[LoopP124,3969
	    struct trans_object * LoopT[LoopT125,4031
	} loop;126,4094
    } u;127,4103
    unsigned _n_acts;128,4112
    Activity * list[list129,4134
    struct trans_object * FjT[FjT130,4196
    struct trans_object * FjF[FjF131,4272
    struct place_object * FjP[FjP132,4341
    const Entry * entry[entry133,4404

place.cc,476
const double Place::SERVER_Y_OFFSET 27,687
const double Place::CLIENT_Y_OFFSET 28,730
const double Place::PLACE_X_OFFSET 29,773
const double Place::PLACE_Y_OFFSET 30,818
const char * Place::name(name32,863
scheduling_type Place::scheduling(scheduling37,937
Place::scheduling_is_ok(scheduling_is_ok49,1219
unsigned int Place::multiplicity(multiplicity60,1458
bool Place::is_infinite(is_infinite80,2102
bool Place::has_random_queueing(has_random_queueing92,2395

actlist.cc,1334
static jmp_buf loop_env;28,738
ActivityList::ActivityList(31,765
ActivityList::remove_netobj(remove_netobj93,2093
ActivityList::join_find_children(join_find_children120,2601
ActivityList::fork_join_name(fork_join_name156,3435
bool ActivityList::check_external_joins(check_external_joins195,4183
bool ActivityList::check_fork_no_join(check_fork_no_join213,4681
bool ActivityList::check_quorum_join(check_quorum_join226,4913
bool ActivityList::check_fork_has_join(check_fork_has_join239,5120
void ActivityList::find_fork_list(find_fork_list250,5329
ActivityList::fork_find_children(fork_find_children315,7876
ActivityList::backtrack(backtrack369,9228
ActivityList::add_to_join_list(add_to_join_list438,10740
ActivityList::join_count_replies(join_count_replies463,11354
ActivityList::fork_count_replies(fork_count_replies505,12552
ActivityList::set_join_type(set_join_type606,15334
bool ActivityList::is_join_list(is_join_list619,15542
bool ActivityList::is_fork_list(is_fork_list625,15676
bool ActivityList::is_loop_list(is_loop_list630,15809
void ActivityList::insert_DOM_results(insert_DOM_results635,15887
ActivityList::path_error(path_error644,16088
ActivityList::follow_join_for_tokens(follow_join_for_tokens661,16594
ActivityList::follow_fork_for_tokens(follow_fork_for_tokens699,17636

petrisrvn.h,1366
#define _PETRISRVN_H12,446
#define BUG_622	36,816
#define BUG_163	37,877
#define BUG_263	38,923
#define	PROC_LAYER_NUM	46,1041
#define PRIMARY_LAYER_NUM	47,1067
#define	SERVICE_RATE_LAYER_NUM	48,1095
#define	CALL_RATE_LAYER_NUM	49,1128
#define MEASUREMENT_LAYER_NUM	50,1158
#define	FIFO_LAYER_NUM	51,1190
#define	JOIN_LAYER_NUM	52,1216
#define	ENTRY_LAYER_NUM	53,1242
#define	NULL_LAYER	55,1270
#define	PROC_LAYER	56,1292
#define PRIMARY_LAYER	57,1339
#define	SERVICE_RATE_LAYER	58,1392
#define	CALL_RATE_LAYER	59,1454
#define	MEASUREMENT_LAYER	60,1511
#define	FIFO_LAYER	61,1571
#define	JOIN_LAYER	62,1618
#define	ENTRY_LAYER(63,1665
#define DIMI 67,1804
#define DIME 68,1848
#define DIMET 69,1893
#define DIMPH 70,1943
#define DIMSLICE 71,1991
#define DIMP 72,2039
#define	MAX_MULT 73,2088
#define MAX_ACT 74,2142
#define MAX_BRANCH 75,2193
#define MAX 76,2249
#define MAX_STAGE 77,2268
#define OPEN_MODEL_TOKENS 78,2322
#define N_SEMAPHORE_ENTRIES 79,2387
#define	INFINITE_SERVER	81,2454
#define EPSILON 82,2480
static inline bool bit_test(107,3561
static inline void throw_bad_parameter(108,3660
template <class Type> struct ConstExec110,3754
    typedef const void 112,3795
    ConstExec<ConstExec113,3844
    void operator()(operator()114,3895
    void operator()(operator()115,3965
    const funcPtr _f;117,4042

makeobj.cc,697
std::map<std::string,std::string> netobj_name_table;37,895
create_place(48,1169
move_place_tag(88,2293
move_place(99,2522
create_rpar(112,2782
no_rpar(147,3753
no_place(173,4286
inc_marking(205,4984
create_trans(230,5572
orient_trans(289,7114
move_trans(297,7256
move_trans_tag(305,7479
no_trans(321,7887
create_arc 356,8654
create_arc_mult(363,8820
create_res 422,10429
typedef struct groupy 462,11601
    struct group_object * group;463,11625
    struct trans_object ** trans;464,11658
} groupies_t;465,11692
static groupies_t * group=467,11707
groupize 470,11743
free_group_store(544,13427
shift_rpars(559,13650
insert_netobj_name(586,14602
find_netobj_name(611,15386

runlqx.cc,256
namespace SolverInterface 20,498
    unsigned int Solve::invocationCount 22,527
    std::string Solve::customSuffix;23,572
    bool Solve::solveCallViaLQX 24,609
    bool Solve::implicitSolve 25,690
    LQX::SymbolAutoRef Solve::invoke(invoke27,730

phase.cc,2295
double Phase::__parameter_x;38,936
double Phase::__parameter_y;39,996
slice_info_t::slice_info_t(slice_info_t41,1026
Phase::Phase(61,1419
Phase::set_dom(set_dom81,1822
const char * Phase::name(name93,2162
unsigned int Phase::entry_id(entry_id98,2241
double Phase::s(s103,2329
double Phase::think_time(think_time122,2791
double Phase::coeff_of_var(coeff_of_var137,3126
const Processor * Phase::processor(processor152,3485
LQIO::DOM::Call * Phase::get_call(get_call158,3566
short Phase::rpar_y(rpar_y165,3761
double Phase::y(y171,3941
double Phase::z(z181,4189
std::vector<double>* Phase::get_histogram(get_histogram191,4435
Phase::service_rate(service_rate202,4745
bool Phase::has_stochastic_calls(has_stochastic_calls219,5116
Phase::has_deterministic_service(has_deterministic_service226,5248
Phase::is_hyperexponential(is_hyperexponential235,5391
Phase::n_stages(n_stages244,5526
Phase::add_call(add_call257,6028
Phase::check(check281,6794
Phase::compute_offset(compute_offset314,7756
Phase::transmorgrify(transmorgrify328,8069
Phase::request_processor(request_processor456,13737
Phase::processor_acquired(processor_acquired469,14172
Phase::release_processor(release_processor483,14496
Phase::build_forwarding_list(build_forwarding_list506,15298
Phase::follow_forwarding_path(follow_forwarding_path527,15701
Phase::create_spar(create_spar556,16529
Phase::create_ypar(create_ypar581,17335
Phase::inc_par_offsets(inc_par_offsets597,17696
Phase::remove_netobj(remove_netobj609,17869
Phase::insert_DOM_results(insert_DOM_results619,18087
Phase::get_utilization(get_utilization651,19199
Phase::utilization(utilization699,20773
Phase::get_processor_utilization get_processor_utilization715,21045
Phase::compute_queueing_delay(compute_queueing_delay750,22005
double Phase::queueing_time(queueing_time852,25258
double Phase::response_time(response_time859,25446
double Phase::residence_time(residence_time865,25573
double Phase::drop_probability(drop_probability875,25740
Phase::lambda(lambda887,26010
Phase::drop_lambda(drop_lambda910,26755
Phase::simplify_phase(simplify_phase921,27011
Call::is_rendezvous(is_rendezvous927,27182
Call::is_send_no_reply(is_send_no_reply935,27291
Call::value(value941,27406

model.h,1060
#define PETRISRVN_MODEL_H19,560
struct debug_place_info 43,898
    struct place_object * place;44,924
    Phase * c;45,957
    Phase * d;46,995
    unsigned m;47,1033
#define	DIMDBGPLC	50,1082
class Model 52,1112
    typedef bool (Model::*solve_using)solve_using54,1134
    typedef void (Model::*queue_fnptr)queue_fnptr55,1176
    template <typename Type> static inline void Delete(71,1906
    bool operator!(76,2018
    unsigned int n_phases(78,2073
    bool has_output_file_name(97,2778
    LQIO::DOM::Document * _document;187,6570
    const std::string _input_file_name;188,6607
    const std::string _output_file_name;189,6647
    const LQIO::DOM::Document::OutputFormat _output_format;190,6688
    unsigned int _n_phases;191,6748
    static bool __forwarding_present;194,6785
    static bool __open_class_error;195,6823
    static LQIO::DOM::CPUTime __start_time;198,6869
    static const std::map<std::map199,6913
    static const std::map<const LQIO::DOM::Document::OutputFormat,const std::string> __parseable_output;199,6913

processor.h,688
#define _PROCESSOR_H11,408
class Processor 30,641
    struct history_t 33,688
	Task * task;34,711
	struct place_object * request_place;35,760
	struct trans_object * grant_trans;36,825
	struct place_object * grant_place;37,871
    virtual ~Processor(43,962
    Processor& add_task(48,1119
    unsigned int n_tasks(49,1202
    void remove_netobj(55,1370
    struct place_object * PX;79,2257
    double proc_tokens[proc_tokens80,2287
    static double __x_offset;82,2340
    std::vector<Task *> _tasks;85,2380
    history_t _history[_history86,2412
struct eqProcStr 93,2552
    eqProcStr(95,2572
    bool operator()(operator()96,2621
    const std::string& _s;99,2709

results.cc,135
get_pmmean(46,1140
get_pmvariance(73,1671
get_prob(97,2142
get_tput(124,2663
std::ostream& solution_stats_t::print(print146,3193

errmsg.cc,107
struct LQIO::error_message_type local_error_messages[local_error_messages26,636
severity_action 47,2867

entry.cc,1039
std::vector<Entry *> entry;34,830
unsigned int Entry::__next_entry_id 35,858
Entry::Entry(37,900
Entry::initialize(initialize62,1499
Entry::create(create72,1632
const char * Entry::name(name90,2074
Entry&  Entry::set_start_activity(set_start_activity96,2155
double Entry::prob_fwd(prob_fwd102,2269
double Entry::yy(yy126,2948
double Entry::zz(zz135,3120
Entry::test_and_set(test_and_set145,3297
Entry::test_and_set_recv(test_and_set_recv155,3502
Entry::add_call(add_call168,3749
/* static */ void Entry::add_fwd_call(add_fwd_call181,4131
Entry::check check202,4873
Entry::transmorgrify(transmorgrify300,7816
Entry::create_forwarding_gspn(create_forwarding_gspn401,10735
Entry::remove_netobj(remove_netobj425,11743
Entry::task_utilization task_utilization444,12122
Entry::check_open_result(check_open_result469,12591
Entry::insert_DOM_results(insert_DOM_results494,13754
double Entry::queueing_time(queueing_time543,15138
/* static */ Entry * Entry::find(find553,15367
Entry::find(find569,15693

entry.h,2001
#define _ENTRY_H11,404
    NOT_CALLED,30,685
    RENDEZVOUS_REQUEST,31,701
    SEND_NO_REPLY_REQUEST,32,725
    FORWARD_REQUEST33,752
} requesting_type;34,772
#define RENDEZVOUS_REQUEST_TYPE 36,792
#define SEND_NO_REPLY_REQUEST_TYPE	37,849
#define FORWARD_REQUEST_TYPE	38,911
struct Forwarding 40,963
    Forwarding(41,983
    const Phase * _root;45,1142
    const unsigned _slice_no;46,1189
    const unsigned _m;47,1241
    const double _y;48,1287
    struct trans_object * f_trans;49,1324
    struct place_object * f_place;50,1359
class Entry 53,1398
    virtual ~Entry(61,1569
    LQIO::DOM::Entry * get_dom(64,1651
    const Task * task(67,1739
    LQIO::DOM::Entry::Type type(68,1787
    LQIO::DOM::Entry::Semaphore semaphore_type(69,1865
    double openArrivalRate(70,1962
    requesting_type requests(72,2047
    unsigned int entry_id(73,2106
    unsigned int n_phases(74,2162
    Entry & set_n_phases(75,2218
    double release_prob(76,2315
    Entry& set_random_queueing(77,2369
    bool random_queueing(78,2478
    Activity * start_activity(79,2541
    bool is_regular_entry(85,2818
    bool is_activity_entry(86,2907
    Phase phase[phase111,3855
    std::vector<Forwarding *> forwards;112,3898
    struct place_object * DX[DX114,3962
    struct place_object * GdX[GdX115,4017
    struct place_object * ZZ;117,4113
    double _throughput[_throughput119,4178
    LQIO::DOM::Entry * _dom;122,4240
    const Task * _task;123,4269
    Activity * _start_activity;124,4317
    const unsigned int _entry_id;125,4349
    requesting_type _requests;126,4412
    bool _replies;127,4443
    bool _random_queueing;128,4496
    double _rel_prob;129,4556
    unsigned int _n_phases;130,4610
    std::map<std::map131,4665
    std::map<const Entry *,Call> _fwd;131,4665
    static unsigned int __next_entry_id;134,4745
struct eqEntryStr 142,4895
    eqEntryStr(144,4916
    bool operator()(operator()145,4966
    const std::string& _s;148,5048

model.cc,1521
typedef struct tms tms_t;67,1507
typedef double tms_t;69,1539
bool Model::__forwarding_present;74,1591
bool Model::__open_class_error;75,1625
LQIO::DOM::CPUTime Model::__start_time;76,1657
Model::Model(85,1924
Model::~Model(~Model99,2293
Model::solve(solve126,2751
Model::load(load237,7222
Model::set_comment(set_comment275,8067
Model::set_n_phases(set_n_phases307,8773
Model::construct(construct318,9058
Model::recalculateDynamicValues(recalculateDynamicValues442,14102
void Model::initialize(initialize450,14423
Model::transform(transform477,15112
Model::set_queue_length(set_queue_length600,18812
Model::remove_netobj(remove_netobj620,19198
Model::compute(compute642,19743
Model::reload(reload723,21832
Model::restart(restart748,22602
Model::make_queues(make_queues768,23084
Model::make_queue(make_queue887,26761
#define INS_OFFSET(929,27919
Model::fifo_queue(fifo_queue936,28051
Model::random_queue(random_queue1054,32439
Model::queue_prologue(queue_prologue1152,35960
Model::queue_epilogue(queue_epilogue1266,39733
Model::create_phase_instr_net(create_phase_instr_net1351,42630
Model::create_inservice_net(create_inservice_net1428,45387
Model::build_open_arrivals build_open_arrivals1475,46910
Model::trans_rpar(trans_rpar1524,48615
Model::trans_res trans_res1577,49991
Model::insert_DOM_results(insert_DOM_results1621,51447
Model::print_inservice_probability(print_inservice_probability1651,52480
Model::print_inservice_cd(print_inservice_cd1745,55339

/Users/greg/usr/src-V5-git/petrisrvn/wspnlib/TAGS,include
